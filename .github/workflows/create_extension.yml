name: Generate browser extension

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v4

      # Runs a single command using the runners shell
      - name: Install dependencies
        run: npm i
      - name: Build extension
        run: node ExtensionBuilder.cjs
      - name: Build console script (without UI)
        run: node GenerateConsoleScript.cjs
      - name: Build console script (with UI)
        run: node GenerateConsoleScript.cjs ui
      - name: Get last commit SHA
        run: echo "SHORT_COMMIT_SHA=$(git rev-parse --short HEAD)" >> $GITHUB_ENV
      - name: Create Release
        run: gh release create ${{ env.SHORT_COMMIT_SHA }} -t ${{ env.SHORT_COMMIT_SHA }} -n "Note that this release is automatically generated. No testing has been done. Planning on using this on Safari for iOS? Replace every instance of 'MediaSource' with 'ManagedMediaSource' in the content of the script and, if the website uses it, you'll be fine." --generate-notes "Output-Chromium.zip" "Output-Firefox.zip" "ConsoleScript-UI.js" "ConsoleScript-Console.js"
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}